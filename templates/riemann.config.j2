; Listen only on 5555 for TCP logs. Riemann docs strongly suggest forcing TCP over UDP.
; `ws-server` will need to be explicitly enabled if using riemann-dash.
(tcp-server :host "0.0.0.0")
(ws-server :host "0.0.0.0")

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

; Import custom functions, e.g. for Slack alerts
(include "/etc/riemann/conf.d")

(logging/init {:file "/var/log/riemann/riemann.log"})

(def sendmail (mailer {:host "{{ riemann_email_host }}"
                    :ssl "{{ riemann_email_ssl }}"
                    :user "{{ riemann_email_user }}"
                    :pass "{{ riemann_email_pass }}"
                    :from "{{ riemann_email_from }}"}))


(def email (sendmail "{{ riemann_email_receiver }}"))

(let [index (index)]
  (streams
    (default {:ttl 60 :maximum 1.0}
      {% if riemann_debug_logging -%}
      prn
      #(info %)
      {% endif %}

      (adjust [:maximum #(Double/valueOf %)]
        (where (state nil)
          (split
            (tagged "exception") (rate 20 (where (> 20 metric) (with {:state "critical" :description "more than 1 exception per second"} reinject)))
            (< 0.9  (/ metric (:maximum event))) (with :state "critical" reinject)
            (< 0.75 (/ metric (:maximum event))) (with :state "warning" reinject)
            (with :state "ok" reinject))
          (else
            (by [:host :service]
              (where (host #"^dotnet")
                     index
                     (changed :state {:init "ok"} prn #(info %) email)))))
        (expired
          (fn [event] (info "expired" event)))))))

